#application.properties chargés automatiquement par @SpringBootApplication

#then the Spring Boot banner will not be printed on startup, and the application will not be a web application
spring.main.show-banner=false
#spring.main.web-environment=false
#logging.level.org.springframework=ERROR


#Configuration de la base de données
spring.datasource.url = jdbc:h2:mem:testToDoList
spring.datasource.username = sa
spring.datasource.password =
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.db-properties.DB_CLOSE_ON_EXIT=FALSE	
#spring.datasource.initialize=false

#jpa
spring.jpa.show-sql: false
#The default for spring.jpa.hibernate.ddl-auto is create-drop if you use an embedded database. You probably want it to be empty, or just validate (none might work as well but I think that's deprecated by hibernate).
#Voir aussi https://bitbucket.org/madmarkus/springbootexploring/src/f9941fc45b2d?at=master
#spring.jpa.hibernate.ddl-auto: update
#spring.jpa.generate-ddl=false
spring.jpa.database: H2
#spring.jpa.hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy

#EntityManagerFactory
#//	public EntityManagerFactory entityManagerFactory(JpaVendorAdapter jpaVendorAdapter, DataSource dataSource) {
#//		LocalContainerEntityManagerFactoryBean factory = new LocalContainerEntityManagerFactoryBean();
#//		factory.setJpaVendorAdapter(jpaVendorAdapter);
#//		factory.setPackagesToScan("todolist.entities");
#//		factory.setDataSource(dataSource);
#//		factory.afterPropertiesSet();
#//		return factory.getObject();